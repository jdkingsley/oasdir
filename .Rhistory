lubridate::year(ssStmt$userInformation$dateOfBirth) + 22
year(lubridate::year(ssStmt$userInformation$dateOfBirth) + years(62))
lubridate::year(ssStmt$userInformation$dateOfBirth)
lubridate::year(ssStmt$userInformation$dateOfBirth)+lubridate::years(62)
as.Date(ssStmt$userInformation$dateOfBirth)
year(as.Date(ssStmt$userInformation$dateOfBirth)+years(62))
lubridate::year(as.Date(ssStmt$userInformation$dateOfBirth) +
lubridate::years(60))
getAime <- function(ssStmt = NULL, endYear = NULL){
birthDate <- as.Date(ssStmt$userInformation$dateOfBirth)
retireElgYear <- lubridate::year(birthDate + years(62))
ficaEarnings <- getFicaEarnings(ssStmt, endYear = endYear)
# Remove any earnings before the age of 22
ficaEarnings <- ficaEarnings[ficaEarnings$startYear >=
lubridate::year(ssStmt$userInformation$dateOfBirth) + 22,]
### Now calculate the Average Indexed Monthly Earnings
# get base awi amount
baseAwi <- getAwiValues(years =
lubridate::year(as.Date(ssStmt$userInformation$dateOfBirth) +
lubridate::years(60)))
# calculate factors
factors <- getAwiSet(endYear = retireElgYear)
factors <- factors[factors$Year %in% c(min(ficaEarnings$startYear):retireElgYear),]
factors$factor <- baseAwi / factors$AWI
factors$factor[which(factors$Year > (retireElgYear - 2))] <- 1.0
# add the multiplying factors
ficaEarnings$factors <- factors[match(ficaEarnings$startYear, factors$Year),]$factor
ficaEarnings <- ficaEarnings[!is.na(ficaEarnings$factors),]
ficaEarnings$Earnings <- ficaEarnings$Earnings * ficaEarnings$factors
# get highest (up to) 35 years of taxed social security wages
ficaEarnings <- ficaEarnings[order(ficaEarnings$Earnings, decreasing = TRUE),]
if(nrow(ficaEarnings > 35))
ficaEarnings <- ficaEarnings[1:35,]
# return calculatiom of AIME
floor(sum(ficaEarnings$Earnings)/420)
}
library("knitr")
library("ggplot2")
library("scales")
library("lubridate")
library("reshape2")
library("earth")
library("oasdir")
opts_chunk$set(warning = FALSE,
message = FALSE,
echo = FALSE)
ggplot(getFraSet(), aes(x = `Birth Year`, y = `Full Retirement Age`)) +
geom_line() +
theme_minimal()
ggplot(getAwiSet(endYear = 2025), aes(x = Year, y = AWI, color = Status)) +
geom_line() +
theme_minimal() +
theme(legend.position = "bottom") +
guides(colour = guide_legend(title = NULL)) +
scale_y_continuous(labels = dollar_format())
ggplot(getBenefitBasesSet(endYear = 2025), aes(x = Year, y = Amount,
color = Status)) +
geom_line() +
theme_minimal() +
theme(legend.position = "bottom") +
guides(colour = guide_legend(title = NULL)) +
scale_y_continuous(labels = dollar_format())
# Read Social Security Statement
ssStatement <- system.file("extdata", "Early_Retirement_Sample.xml", package = "oasdir")
ssJQ <- readStatement(file = ssStatement)
# Retrieve some of the information from the statement
birthDateJQ <- as.Date(ssJQ$userInformation$dateOfBirth)
retireElgYearJQ <- year(birthDateJQ + years(62))
retireAgeJQ <-62
retireDateJQ <- birthDateJQ + years(retireAgeJQ) + months(1)
lastYear <- year(retireDateJQ)
earningsJQMedicare <- getMedicareEarnings(ssJQ, endYear = lastYear)
colnames(earningsJQMedicare) <- c("startYear", "endYear", "Earnings")
earningsJQMedicare$Type <- "Medicare"
earningsJQFica <- getFicaEarnings(ssJQ, endYear = lastYear)
colnames(earningsJQFica) <- c("startYear", "endYear", "Earnings")
earningsJQFica$Type <- "FICA"
earningsJQLong <- rbind(earningsJQMedicare, earningsJQFica)
aimeJQ <- getAime(ssStmt = ssJQ, endYear = year(retireDateJQ))
library(oasdir)
library("knitr")
library("ggplot2")
library("scales")
library("lubridate")
library("reshape2")
library("earth")
library("oasdir")
opts_chunk$set(warning = FALSE,
message = FALSE,
echo = FALSE)
ggplot(getFraSet(), aes(x = `Birth Year`, y = `Full Retirement Age`)) +
geom_line() +
theme_minimal()
ggplot(getAwiSet(endYear = 2025), aes(x = Year, y = AWI, color = Status)) +
geom_line() +
theme_minimal() +
theme(legend.position = "bottom") +
guides(colour = guide_legend(title = NULL)) +
scale_y_continuous(labels = dollar_format())
ggplot(getBenefitBasesSet(endYear = 2025), aes(x = Year, y = Amount,
color = Status)) +
geom_line() +
theme_minimal() +
theme(legend.position = "bottom") +
guides(colour = guide_legend(title = NULL)) +
scale_y_continuous(labels = dollar_format())
# Read Social Security Statement
ssStatement <- system.file("extdata", "Early_Retirement_Sample.xml", package = "oasdir")
ssJQ <- readStatement(file = ssStatement)
# Retrieve some of the information from the statement
birthDateJQ <- as.Date(ssJQ$userInformation$dateOfBirth)
retireElgYearJQ <- year(birthDateJQ + years(62))
retireAgeJQ <-62
retireDateJQ <- birthDateJQ + years(retireAgeJQ) + months(1)
lastYear <- year(retireDateJQ)
earningsJQMedicare <- getMedicareEarnings(ssJQ, endYear = lastYear)
colnames(earningsJQMedicare) <- c("startYear", "endYear", "Earnings")
earningsJQMedicare$Type <- "Medicare"
earningsJQFica <- getFicaEarnings(ssJQ, endYear = lastYear)
colnames(earningsJQFica) <- c("startYear", "endYear", "Earnings")
earningsJQFica$Type <- "FICA"
earningsJQLong <- rbind(earningsJQMedicare, earningsJQFica)
# earningsJQAime <- earningsJQFica
# earningsJQAime$Type <- "AIME"
#
# # Remove any earnings before the age of 22
# earningsJQAime <- earningsJQAime[earningsJQAime$startYear >=
#                                    lubridate::year(birthDateJQ) + 22,]
#
# ### Now calculate the Average Indexed Monthly Earnings
# # get base awi amount
# baseAwiJQ <- getAwiValues(years = retireElgYearJQ - 2)
#
# # calculate factors
# factors <- getAwiSet(endYear = retireElgYearJQ)
# factors <- factors[factors$Year %in% c(min(earningsJQAime$startYear):retireElgYearJQ),]
# factors$factor <- baseAwiJQ / factors$AWI
# factors$factor[which(factors$Year > (retireElgYearJQ - 2))] <- 1.0
#
# # add the multiplying factors
# earningsJQAime$factors <- factors[match(earningsJQAime$startYear, factors$Year),]$factor
# earningsJQAime <- earningsJQAime[!is.na(earningsJQAime$factors),]
# earningsJQAime$Earnings <- earningsJQAime$Earnings * earningsJQAime$factors
#
# # get highest (up to) 35 years of taxed social security wages
# earningsJQAime <- earningsJQAime[order(earningsJQAime$Earnings, decreasing = TRUE),]
# if(nrow(earningsJQAime > 35))
#   earningsJQAime <- earningsJQAime[1:35,]
# and calculate AIME
aimeJQ <- getAime(ssStmt = ssJQ, endYear = year(retireDateJQ))
aimeJQ <- getAime(ssStmt = ssJQ, endYear = year(retireDateJQ))
aimeJQ <- getAime(ssStmt = ssJQ, endYear = year(retireDateJQ))
ssStmt <- ssJQ
endYear <- year(retireDateJQ)
birthDate <- as.Date(ssStmt$userInformation$dateOfBirth)
retireElgYear <- lubridate::year(birthDate + years(62))
ficaEarnings <- getFicaEarnings(ssStmt, endYear = endYear)
ficaEarnings <- ficaEarnings[ficaEarnings$startYear >=
lubridate::year(ssStmt$userInformation$dateOfBirth) + 22,]
baseAwi <- getAwiValues(years =
lubridate::year(as.Date(ssStmt$userInformation$dateOfBirth) +
lubridate::years(60)))
factors <- getAwiSet(endYear = retireElgYear)
factors <- factors[factors$Year %in% c(min(ficaEarnings$startYear):retireElgYear),]
factors$factor <- baseAwi / factors$AWI
factors$factor[which(factors$Year > (retireElgYear - 2))] <- 1.0
ficaEarnings$factors <- factors[match(ficaEarnings$startYear, factors$Year),]$factor
ficaEarnings <- ficaEarnings[!is.na(ficaEarnings$factors),]
ficaEarnings$Earnings <- ficaEarnings$Earnings * ficaEarnings$factors
ficaEarnings$Earnings <- ficaEarnings$ficaEarnings * ficaEarnings$factors
ficaEarnings$Earnings <- NULL
ficaEarnings$adjEarnings <- ficaEarnings$ficaEarnings * ficaEarnings$factors
getAime <- function(ssStmt = NULL, endYear = NULL){
birthDate <- as.Date(ssStmt$userInformation$dateOfBirth)
retireElgYear <- lubridate::year(birthDate + years(62))
ficaEarnings <- getFicaEarnings(ssStmt, endYear = endYear)
# Remove any earnings before the age of 22
ficaEarnings <- ficaEarnings[ficaEarnings$startYear >=
lubridate::year(ssStmt$userInformation$dateOfBirth) + 22,]
### Now calculate the Average Indexed Monthly Earnings
# get base awi amount
baseAwi <- getAwiValues(years =
lubridate::year(as.Date(ssStmt$userInformation$dateOfBirth) +
lubridate::years(60)))
# calculate factors
factors <- getAwiSet(endYear = retireElgYear)
factors <- factors[factors$Year %in% c(min(ficaEarnings$startYear):retireElgYear),]
factors$factor <- baseAwi / factors$AWI
factors$factor[which(factors$Year > (retireElgYear - 2))] <- 1.0
# add the multiplying factors
ficaEarnings$factors <- factors[match(ficaEarnings$startYear, factors$Year),]$factor
ficaEarnings <- ficaEarnings[!is.na(ficaEarnings$factors),]
ficaEarnings$adjEarnings <- ficaEarnings$ficaEarnings * ficaEarnings$factors
# get highest (up to) 35 years of taxed social security wages
ficaEarnings <- ficaEarnings[order(ficaEarnings$adjEarnings, decreasing = TRUE),]
if(nrow(ficaEarnings > 35))
ficaEarnings <- ficaEarnings[1:35,]
# return calculatiom of AIME
floor(sum(ficaEarnings$adjEarnings)/420)
}
aimeJQ <- getAime(ssStmt = ssJQ, endYear = year(retireDateJQ))
View(earningsJQLong)
library(oasdir)
library(oasdir)
library("knitr")
library("ggplot2")
library("scales")
library("lubridate")
library("reshape2")
library("earth")
library("oasdir")
opts_chunk$set(warning = FALSE,
message = FALSE,
echo = FALSE)
ggplot(getFraSet(), aes(x = `Birth Year`, y = `Full Retirement Age`)) +
geom_line() +
theme_minimal()
ggplot(getAwiSet(endYear = 2025), aes(x = Year, y = AWI, color = Status)) +
geom_line() +
theme_minimal() +
theme(legend.position = "bottom") +
guides(colour = guide_legend(title = NULL)) +
scale_y_continuous(labels = dollar_format())
ggplot(getBenefitBasesSet(endYear = 2025), aes(x = Year, y = Amount,
color = Status)) +
geom_line() +
theme_minimal() +
theme(legend.position = "bottom") +
guides(colour = guide_legend(title = NULL)) +
scale_y_continuous(labels = dollar_format())
# Read Social Security Statement
ssStatement <- system.file("extdata", "Early_Retirement_Sample.xml", package = "oasdir")
ssJQ <- readStatement(file = ssStatement)
# Retrieve some of the information from the statement
birthDateJQ <- as.Date(ssJQ$userInformation$dateOfBirth)
retireElgYearJQ <- year(birthDateJQ + years(62))
retireAgeJQ <-62
retireDateJQ <- birthDateJQ + years(retireAgeJQ) + months(1)
lastYear <- year(retireDateJQ)
earningsJQMedicare <- getMedicareEarnings(ssJQ, endYear = lastYear)
colnames(earningsJQMedicare) <- c("startYear", "endYear", "Earnings")
earningsJQMedicare$Type <- "Medicare"
earningsJQFica <- getFicaEarnings(ssJQ, endYear = lastYear)
colnames(earningsJQFica) <- c("startYear", "endYear", "Earnings")
earningsJQFica$Type <- "FICA"
earningsJQLong <- rbind(earningsJQMedicare, earningsJQFica)
# earningsJQAime <- earningsJQFica
# earningsJQAime$Type <- "AIME"
#
# # Remove any earnings before the age of 22
# earningsJQAime <- earningsJQAime[earningsJQAime$startYear >=
#                                    lubridate::year(birthDateJQ) + 22,]
#
# ### Now calculate the Average Indexed Monthly Earnings
# # get base awi amount
# baseAwiJQ <- getAwiValues(years = retireElgYearJQ - 2)
#
# # calculate factors
# factors <- getAwiSet(endYear = retireElgYearJQ)
# factors <- factors[factors$Year %in% c(min(earningsJQAime$startYear):retireElgYearJQ),]
# factors$factor <- baseAwiJQ / factors$AWI
# factors$factor[which(factors$Year > (retireElgYearJQ - 2))] <- 1.0
#
# # add the multiplying factors
# earningsJQAime$factors <- factors[match(earningsJQAime$startYear, factors$Year),]$factor
# earningsJQAime <- earningsJQAime[!is.na(earningsJQAime$factors),]
# earningsJQAime$Earnings <- earningsJQAime$Earnings * earningsJQAime$factors
#
# # get highest (up to) 35 years of taxed social security wages
# earningsJQAime <- earningsJQAime[order(earningsJQAime$Earnings, decreasing = TRUE),]
# if(nrow(earningsJQAime > 35))
#   earningsJQAime <- earningsJQAime[1:35,]
# and calculate AIME
aimeJQ <- getAimeValue(ssStmt = ssJQ, endYear = year(retireDateJQ))
library(oasdir)
library(oasdir)
library("knitr")
library("ggplot2")
library("scales")
library("lubridate")
library("reshape2")
library("earth")
library("oasdir")
opts_chunk$set(warning = FALSE,
message = FALSE,
echo = FALSE)
ggplot(getFraSet(), aes(x = `Birth Year`, y = `Full Retirement Age`)) +
geom_line() +
theme_minimal()
ggplot(getAwiSet(endYear = 2025), aes(x = Year, y = AWI, color = Status)) +
geom_line() +
theme_minimal() +
theme(legend.position = "bottom") +
guides(colour = guide_legend(title = NULL)) +
scale_y_continuous(labels = dollar_format())
ggplot(getBenefitBasesSet(endYear = 2025), aes(x = Year, y = Amount,
color = Status)) +
geom_line() +
theme_minimal() +
theme(legend.position = "bottom") +
guides(colour = guide_legend(title = NULL)) +
scale_y_continuous(labels = dollar_format())
# Read Social Security Statement
ssStatement <- system.file("extdata", "Early_Retirement_Sample.xml", package = "oasdir")
ssJQ <- readStatement(file = ssStatement)
# Retrieve some of the information from the statement
birthDateJQ <- as.Date(ssJQ$userInformation$dateOfBirth)
retireElgYearJQ <- year(birthDateJQ + years(62))
retireAgeJQ <-62
retireDateJQ <- birthDateJQ + years(retireAgeJQ) + months(1)
lastYear <- year(retireDateJQ)
earningsJQMedicare <- getMedicareEarnings(ssJQ, endYear = lastYear)
colnames(earningsJQMedicare) <- c("startYear", "endYear", "Earnings")
earningsJQMedicare$Type <- "Medicare"
earningsJQFica <- getFicaEarnings(ssJQ, endYear = lastYear)
colnames(earningsJQFica) <- c("startYear", "endYear", "Earnings")
earningsJQFica$Type <- "FICA"
earningsJQLong <- rbind(earningsJQMedicare, earningsJQFica)
# earningsJQAime <- earningsJQFica
# earningsJQAime$Type <- "AIME"
#
# # Remove any earnings before the age of 22
# earningsJQAime <- earningsJQAime[earningsJQAime$startYear >=
#                                    lubridate::year(birthDateJQ) + 22,]
#
# ### Now calculate the Average Indexed Monthly Earnings
# # get base awi amount
# baseAwiJQ <- getAwiValues(years = retireElgYearJQ - 2)
#
# # calculate factors
# factors <- getAwiSet(endYear = retireElgYearJQ)
# factors <- factors[factors$Year %in% c(min(earningsJQAime$startYear):retireElgYearJQ),]
# factors$factor <- baseAwiJQ / factors$AWI
# factors$factor[which(factors$Year > (retireElgYearJQ - 2))] <- 1.0
#
# # add the multiplying factors
# earningsJQAime$factors <- factors[match(earningsJQAime$startYear, factors$Year),]$factor
# earningsJQAime <- earningsJQAime[!is.na(earningsJQAime$factors),]
# earningsJQAime$Earnings <- earningsJQAime$Earnings * earningsJQAime$factors
#
# # get highest (up to) 35 years of taxed social security wages
# earningsJQAime <- earningsJQAime[order(earningsJQAime$Earnings, decreasing = TRUE),]
# if(nrow(earningsJQAime > 35))
#   earningsJQAime <- earningsJQAime[1:35,]
# and calculate AIME
aimeJQ <- getAimeValue(ssStmt = ssJQ, endYear = year(retireDateJQ))
# earningsJQLong <- rbind(earningsJQLong,
#                          earningsJQAime[,c("startYear", "endYear", "Earnings", "Type")])
ormat(aimeJQ, big.mark = ",")
format(aimeJQ, big.mark = ",")
aimeSetJQ <- getAimeSet(ssStmt = ssJQ, endYear = year(retireDateJQ))
aimeSetJQ$Type <- "Indexed"
aimeSetJQ$Type <- NULL
temp <- aimeSetJQ
temp$Type <- "Indexed"
colnames(temp) <- c("startYear", "endYear", "ficaEarnings", "factors", "Earnings", "Type")
earningsJQLong <- rbind(earningsJQLong, temp[, c("startYear", "endYear",
"Earnings", "Type")])
ggplot(earningsJQLong, aes(x = `startYear`, y = Earnings)) +
geom_line(aes(color = Type)) +
geom_hline(yintercept = aimeJQ*12, linetype = 2) +
theme_minimal() +
scale_y_continuous(labels = dollar_format()) +
theme(legend.position = "bottom") +
guides(colour = guide_legend(title = NULL))
piaBendsJQ <- getPiaBendPts(year(retireDateJQ))
piaJQ <- getPia(piaBendsJQ, aimeJQ)
# piaJQ <-
#   if(aimeJQ > piaBendsJQ$Second){
#     .9 * piaBendsJQ$First +
#     .32 * (piaBendsJQ$Second - piaBendsJQ$First) +
#       .15 * (aimeJQ - piaBendsJQ$Second)
# } else if(aimeJQ > piaBendsJQ$First){
#   .9 * piaBendsJQ$First +
#   .32 * (aimeJQ - piaBendsJQ$First)
# } else {
#   .9 * aimeJQ
# }
#
# piaJQ <- floor(piaJQ*10)/10
format(piaJQ, big.mark = ",")
rm(temp)
library(oasdir)
library(oasdir)
library(oasdir)
library("knitr")
library("ggplot2")
library("scales")
library("lubridate")
library("reshape2")
library("earth")
library("oasdir")
opts_chunk$set(warning = FALSE,
message = FALSE,
echo = FALSE)
ggplot(getFraSet(), aes(x = `Birth Year`, y = `Full Retirement Age`)) +
geom_line() +
theme_minimal()
ggplot(getAwiSet(endYear = 2025), aes(x = Year, y = AWI, color = Status)) +
geom_line() +
theme_minimal() +
theme(legend.position = "bottom") +
guides(colour = guide_legend(title = NULL)) +
scale_y_continuous(labels = dollar_format())
ggplot(getBenefitBasesSet(endYear = 2025), aes(x = Year, y = Amount,
color = Status)) +
geom_line() +
theme_minimal() +
theme(legend.position = "bottom") +
guides(colour = guide_legend(title = NULL)) +
scale_y_continuous(labels = dollar_format())
# Read Social Security Statement
ssStatement <- system.file("extdata", "Early_Retirement_Sample.xml", package = "oasdir")
ssJQ <- readStatement(file = ssStatement)
# Retrieve some of the information from the statement
birthDateJQ <- as.Date(ssJQ$userInformation$dateOfBirth)
retireElgYearJQ <- year(birthDateJQ + years(62))
retireAgeJQ <-62
retireDateJQ <- birthDateJQ + years(retireAgeJQ) + months(1)
lastYear <- year(retireDateJQ)
earningsJQMedicare <- getMedicareEarnings(ssJQ, endYear = lastYear)
colnames(earningsJQMedicare) <- c("startYear", "endYear", "Earnings")
earningsJQMedicare$Type <- "Medicare"
earningsJQFica <- getFicaEarnings(ssJQ, endYear = lastYear)
colnames(earningsJQFica) <- c("startYear", "endYear", "Earnings")
earningsJQFica$Type <- "FICA"
earningsJQLong <- rbind(earningsJQMedicare, earningsJQFica)
aimeJQ <- getAimeValue(ssStmt = ssJQ, endYear = year(retireDateJQ))
# Construct a combined data set to plot
aimeSetJQ <- getAimeSet(ssStmt = ssJQ, endYear = year(retireDateJQ))
temp <- aimeSetJQ
temp$Type <- "Indexed"
colnames(temp) <- c("startYear", "endYear", "ficaEarnings", "factors", "Earnings", "Type")
earningsJQLong <- rbind(earningsJQLong, temp[, c("startYear", "endYear",
"Earnings", "Type")])
rm(temp)
# plot the data
ggplot(earningsJQLong, aes(x = `startYear`, y = Earnings)) +
geom_line(aes(color = Type)) +
geom_hline(yintercept = aimeJQ*12, linetype = 2) +
theme_minimal() +
scale_y_continuous(labels = dollar_format()) +
theme(legend.position = "bottom") +
guides(colour = guide_legend(title = NULL))
plotdata <- melt(getPiaBendPtsSet(),
id.vars = c("Year", "Formula"),
variable.name = "Bend Point",
value.name = "Value")
ggplot(plotdata, aes(x = Year, y = Value,
color = Formula,
group = Formula)) +
geom_line() +
theme_minimal() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90, vjust = 0.5)) +
ylab("Bend Point") +
guides(colour = guide_legend(title.position = "top")) +
facet_wrap(~ `Bend Point`)
piaBendsJQ <- getPiaBendPts(year(retireDateJQ))
piaJQ <- getPia(piaBendsJQ, aimeJQ)
maxPiaBendsJQ <- getMaxPiaBendPts(year(retireDateJQ))
maxBenefitJQ <- getFamilyMax(maxPiaBends = maxPiaBendsJQ, aime = aimeJQ)
# maxBenefitJQ <-
#   if(aimeJQ > maxPiaBendsJQ$Third){
#   1.5 * maxPiaBendsJQ$First +
#   2.72 * (maxPiaBendsJQ$Second - maxPiaBendsJQ$First) +
#   1.34 * (maxPiaBendsJQ$Third - maxPiaBendsJQ$Second) +
#   1.75 * (aimeJQ - maxPiaBendsJQ$Third)
# } else if(aimeJQ > maxPiaBendsJQ$Second){
#   1.5 * maxPiaBendsJQ$First +
#   2.72 * (maxPiaBendsJQ$Second - maxPiaBendsJQ$First) +
#   1.34 * (aimeJQ - maxPiaBendsJQ$Second)
# } else if(aimeJQ > maxPiaBendsJQ$First){
#   1.5 * maxPiaBendsJQ$First +
#   2.72 * (aimeJQ - maxPiaBendsJQ$First)
# } else {
#   1.5 * aimeJQ
# }
format(maxBenefitJQ, big.mark = ",")
library(oasdir)
devtools::load_all(".")
library("oasdir", lib.loc="/usr/local/lib/R/site-library")
data = getPiaAdjustmentsSet()
library(oasdir)
data = getPiaAdjustmentsSet()
plotdata <- getPiaAdjustmentsSet()
plotdata <- getPiaAdjustmentsSet()
plotdata <- plotdata[plotdata$`Year of birth` == 1959,]
ggplot(data = plotdata,
aes(x = `First Distribution Age`, y = `Percentage of PIA`, group = `Year of birth`)) +
geom_line() +
theme_minimal()
library(ggplot2)
ggplot(data = plotdata,
aes(x = `First Distribution Age`, y = `Percentage of PIA`, group = `Year of birth`)) +
geom_line() +
theme_minimal()
ggplot(data = getPiaAdjustments(birthYear = year(birthDateJQ)),
aes(x = `First Distribution Age`, y = `Percentage of PIA`, group = `Year of birth`)) +
geom_line() +
theme_minimal()
ggplot(data = getPiaAdjustments(birthYear = lubridate::year(birthDateJQ)),
aes(x = `First Distribution Age`, y = `Percentage of PIA`, group = `Year of birth`)) +
geom_line() +
theme_minimal()
rm(plotdata)
ggplot(getCpiwSet(), aes(x = Date, y = CPIW), color = Status) +
geom_line() +
theme_minimal()
ggplot(getColaSet(), aes(x = Year, y = COLA)) +
geom_line() +
theme_minimal()
