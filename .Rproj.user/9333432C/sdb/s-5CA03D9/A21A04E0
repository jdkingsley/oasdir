{
    "collab_server" : "",
    "contents" : "\n\n#' Indexed earnings are FICA earnings that have been adjusted using\n#' a ratio of the National Averge Wage Index (AWI) for an individuals\n#' indexing year over the Average Wage Index for the year the earnings\n#' were realized. The indexing year is the year two years prior to\n#' the Normal Retirement Age (NRA) year. In other words, it is the\n#' year a person turns 60. This function returns the Average Indexed\n#' Monthly Earnings (AIME) for the highest 35 years of indexed\n#' earnings after the year a person turns 21. Note the AIME calculation\n#' always uses 35 years of earnings even if it means some years of\n#' $0 earnings must be included. If the endYear is in the future,\n#' estimates of FICA earnings and AWI are used and appropriate\n#' warnings are issued.\n#'\n#' @param ssStmt the Social Security Statement as retrieved through read_xml_ssStatement()\n#' @param endYear the last year to include in the calculation\n#' @return The Average Indexed Monthly Earnings set\n#' @examples\n#' getAimeSet(ssStmt = JQPublicStatement, endYear = 2021)\n#'\n#' @export\ngetAimeSet <- function(ssStmt = NULL, endYear = NULL){\n  birthDate <- as.Date(ssStmt$userInformation$dateOfBirth)\n  retireElgYear <- lubridate::year(birthDate + years(62))\n\n  indexedEarnings <- getFicaEarnings(ssStmt, endYear = endYear)\n\n  # Remove any earnings before the age of 22\n  indexedEarnings <- indexedEarnings[indexedEarnings$startYear >=\n                                 lubridate::year(ssStmt$userInformation$dateOfBirth) + 22,]\n\n  ### Now calculate the Average Indexed Monthly Earnings\n  # get base awi amount\n  baseAwi <- getAwiValues(years =\n                            lubridate::year(as.Date(ssStmt$userInformation$dateOfBirth) +\n                                              lubridate::years(60)))\n  # calculate factors\n  factors <- getAwiSet(endYear = retireElgYear)\n  factors <- factors[factors$Year %in% c(min(indexedEarnings$startYear):retireElgYear),]\n  factors$factor <- baseAwi / factors$AWI\n  factors$factor[which(factors$Year > (retireElgYear - 2))] <- 1.0\n\n  # add the multiplying factors\n  indexedEarnings$factors <- factors[match(indexedEarnings$startYear, factors$Year),]$factor\n  indexedEarnings <- indexedEarnings[!is.na(indexedEarnings$factors),]\n  indexedEarnings$adjEarnings <- indexedEarnings$ficaEarnings * indexedEarnings$factors\n\n  # get highest (up to) 35 years of taxed social security wages\n  indexedEarnings <- indexedEarnings[order(indexedEarnings$adjEarnings, decreasing = TRUE),]\n  if(nrow(indexedEarnings > 35))\n    indexedEarnings <- indexedEarnings[1:35,]\n\n  indexedEarnings\n}\n\n\n\n\n\n#' Indexed earnings are FICA earnings that have been adjusted using\n#' a ratio of the National Averge Wage Index (AWI) for an individuals\n#' indexing year over the Average Wage Index for the year the earnings\n#' were realized. The indexing year is the year two years prior to\n#' the Normal Retirement Age (NRA) year. In other words, it is the\n#' year a person turns 60. This function returns the Average Indexed\n#' Monthly Earnings (AIME) for the highest 35 years of indexed\n#' earnings after the year a person turns 21. Note the AIME calculation\n#' always uses 35 years of earnings even if it means some years of\n#' $0 earnings must be included. If the endYear is in the future,\n#' estimates of FICA earnings and AWI are used and appropriate\n#' warnings are issued.\n#'\n#' @param ssStmt the Social Security Statement as retrieved through read_xml_ssStatement()\n#' @param endYear the last year to include in the calculation\n#' @return The Average Indexed Monthly Earnings value\n#' @examples\n#' getAimeValue(ssStmt = JQPublicStatement, endYear = 2021)\n#'\n#' @export\ngetAimeValue <- function(ssStmt = NULL, endYear = NULL){\n\n  # return calculatiom of AIME\n  floor(sum(getAimeSet(ssStmt = ssStmt, endYear = endYear)$adjEarnings)/420)\n}\n\n\n\n\n\n#' The Primary Insurance Amount (PIA) is the actual Social Security\n#' benefit. It is based on the average of the highest 35 years of\n#' indexed earnings.\n#'\n#' @param piaBends the PIA bend points from \\code{getPiaBendPts()}\n#' @param aime The Average Indexed Monthly Value from \\code{getAimeValue()}\n#' @return The Primary Insurance Amount\n#' @examples\n#' getPia(piaBends = JQPublicBends, aime = JQPublicAime)\n#'\n#' @export\ngetPia <- function(piaBends = NULL, aime = NULL){\n\n  floor(if(aime > piaBends$Second){\n    .9 * piaBends$First +\n      .32 * (piaBends$Second - piaBends$First) +\n      .15 * (aime - piaBends$Second)\n  } else if(aime > piaBends$First){\n    .9 * piaBends$First +\n      .32 * (aime - piaBends$First)\n  } else {\n    .9 * aime\n  } * 10 / 10)\n}\n\n\n\n\n\n#' The Family Maximum Benefit is the maximum Social Security benefit\n#' that can be paid based on an individual's earnings record. Like the\n#' PIA, it is based on the average of the highest 35 years of indexed\n#' earnings.\n#'\n#' @param maxPiaBends the family maximum PIA bend points from \\code{getMaxPiaBendPts()}\n#' @param aime The Average Indexed Monthly Value from \\code{getAimeValue()}\n#' @return The Family Maximum Benefit\n#' @examples\n#' getPia(piaBends = JQPublicBends, aime = JQPublicAime)\n#'\n#' @export\ngetFamilyMax <- function(maxPiaBends = NULL, aime = NULL){\n  floor(\n    if(aime > maxPiaBends$Third){\n      1.5 * maxPiaBends$First +\n        2.72 * (maxPiaBends$Second - maxPiaBends$First) +\n        1.34 * (maxPiaBends$Third - maxPiaBends$Second) +\n        1.75 * (aime - maxPiaBends$Third)\n    } else if(aime > maxPiaBends$Second){\n      1.5 * maxPiaBends$First +\n        2.72 * (maxPiaBends$Second - maxPiaBends$First) +\n        1.34 * (aime - maxPiaBends$Second)\n    } else if(aime > maxPiaBends$First){\n      1.5 * maxPiaBends$First +\n        2.72 * (aime - maxPiaBends$First)\n    } else {\n      1.5 * aime\n    } * 10 / 10)\n}\n\n\n\n\n\n# early retirement -\n  # the PIA benefit is reduced 5/9 of one percent for each month\n  # before normal retirement age, up to 36 months.\n  # If the number of months exceeds 36, then the benefit is\n  # further reduced 5/12 of one percent per month.\n  # For example, if the number of reduction months is 60\n  # then the benefit is reduced by 30 percent.\n  # This maximum reduction is calculated as 36 months times 5/9 of 1 percent\n  # plus 24 months times 5/12 of 1 percent.\n\n\n\n# delayed retirement\n  # credit is given according to a table of adjustments\n  # (piaAdjustments$`Percent Yearly Credit`). These adjustment\n  # values are given as yearly adjustments but applied by the\n  # number of months delayed.\n\n\n\n\n# COLA calculation\n\n\n\n",
    "created" : 1494150457298.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1150882837",
    "id" : "A21A04E0",
    "lastKnownWriteTime" : 1498766424,
    "last_content_update" : 1498766424326,
    "path" : "/home/tim/Dropbox/oasdir/R/calculations.R",
    "project_path" : "R/calculations.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}