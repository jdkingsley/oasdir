{
    "collab_server" : "",
    "contents" : "\n\n\n#' Return the \\emph{Benefit Bases} data set.\n#'\n#' Each Social Security benefit is based on the history of earned and\n#' taxable income for the beneficiary (or the beneficiaries spouse).\n#' The income considered is limited by the Benefit and Contribution Base\n#' which changes from year to year to reflect the average of wages\n#' earned in that year. This amount is called the Taxed Social Security\n#' Earnings and it is related to the Average Wage Index. The Social\n#' Security web site contains a table of \\href{https://www.ssa.gov/oact/COLA/cbb.html}{Contribution and Benefits Bases}.\n#' This data set comes from there, but it is not a real time fetch, so\n#' the data is current up to the time that this package was created. In\n#' order to determine the Benefit Base for a year that is beyond the\n#' last year in the Benefit Bases data, the data is fit with a model\n#' which is used to project future Benefit Base values. If no endYear\n#' is provided the function returns the data set of measured values\n#' without any projected values.\n#'\n#' @param endYear the last year to include in the returned data set\n#' @return the Benefit Bases data set\n#' @examples\n#' getBenefitBasesSet(endYear = 2025)\n#' getBenefitBasesSet()\n#'\n#' @export\ngetBenefitBasesSet <- function(endYear = NULL){\n  if(is.null(endYear)) {\n    return(benefitBases)\n  }\n\n  beginYear <- max(benefitBases$Year, na.rm = TRUE) + 1\n  if(endYear <= beginYear) {\n    return(benefitBases[benefitBases$Year <= endYear,])\n  } else {\n    benefitBasesChunk <- data.frame(Year = beginYear:endYear,\n                                    Amount = predict(benefitBasesMars,\n                                                     newdata = beginYear:endYear))\n    benefitBasesChunk$Status = \"Predicted\"\n\n    return(rbind(benefitBases, benefitBasesChunk))\n  }\n}\n\n\n\n\n\n#' Return the \\emph{Benefit Bases} values for input years.\n#'\n#' Return the Benefit Bases for input years. The values are either\n#' measured or predicted through a model depending on whether or\n#' not a measure value exists for the input year. Predicted values\n#' will only be produced for years later than the last year in the\n#' data set downloaded from the government site. No values for years\n#' before the first year in the set will be predicted.\n#'\n#' @param year the years fof the Benefit Base values to return\n#' @return the Benefit Base values for \\code{years}\n#' @examples\n#' getBenefitBaseValues(years = 2025)\n#' getBenefitBaseValues(years = 2000:2025)\n#'\n#' @export\ngetBenefitBaseValues <- function(years = NULL) {\n  if(is.null(years) || missing(years) || length(years) == 0) {\n    stop(\"Need to specify a year (or set of years) for which you\\n  want the Benefit Base value(s).\")\n\n  } else if(max(years) < min(benefitBases$Year)) {\n    stop(\"All years requested are before the first year in the data set.\\n  No values will be returned.\")\n\n  } else if(min(years) < min(benefitBases$Year)) {\n    warning(\"The earliest year requested is before the first year in the data set.\\n  The earliest year returned will be the first year in the data set.\")\n    if(max(years) <= max(benefitBases$Year)) {\n      c(benefitBases[benefitBases$Year %in% years,]$Amount)\n    } else {\n      warning(\"Values after \", max(benefitBases$Year), \" are predicted values.\")\n      c(benefitBases[benefitBases$Year %in% years,]$Amount,\n        predict(benefitBasesMars, newdata = setdiff(years, benefitBases$Year)))\n    }\n\n  } else if(max(years) <= max(benefitBases$Year)) {\n    benefitBases[benefitBases$Year %in% years,]$Amount\n\n  } else if(min(years) <= max(benefitBases$Year)) {\n    warning(\"Values after \", max(benefitBases$Year), \" are predicted values.\")\n    c(benefitBases[benefitBases$Year %in% years,]$Amount,\n      predict(benefitBasesMars, newdata = setdiff(years, benefitBases$Year)))\n\n  } else {\n    warning(\"All values in this set are predicted values.\")\n    c(predict(benefitBasesMars, newdata = years))\n  }\n}\n",
    "created" : 1493551706102.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2766377536",
    "id" : "C2CF33D5",
    "lastKnownWriteTime" : 1491611584,
    "last_content_update" : 1491611584,
    "path" : "~/Dropbox/oasdir/R/benefitBasesData.R",
    "project_path" : "R/benefitBasesData.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}