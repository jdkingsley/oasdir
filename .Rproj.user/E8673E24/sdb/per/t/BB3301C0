{
    "collab_server" : "",
    "contents" : "\n#' Return the \\emph{National Average Wage Index} data set.\n#'\n#' The \\emph{National Average Wage Index} is used to normalize wages across\n#' different years. Wage indexing depends on the year in which a person is\n#' first elgible to receive OASDI benefits. The year of first elgibility for\n#' OASDI is at age 62. An individuals earnings are always indexed to the average\n#' wage level two years prior to the year of first eligibility. This is called\n#' the indexing year. Thus, for a person reaching age 62 in 2017, the personâ€™s\n#' earnings would be indexed to the average wage index for 2015, which is the\n#' indexing year. A table of \\href{https://www.ssa.gov/OACT/COLA/awiseries.html}{Average Wage Indexes}\n#' is available on the Social Security web site. This data set comes from there,\n#' but it is not a real time fetch, so the data is current up to the time that\n#' this package was created. In order to determine the Average Indexed Monthly\n#' Earnings when the indexing year is beyond the last year in the AWI data, the\n#' data is fit with a model which is used to project future wage index values.\n#' If no endYear is provided the function returns the data set of measured values\n#' without any projected values.\n#'\n#' @param endYear the last year to include in the returned data set\n#' @return the AWI data set\n#' @examples\n#' getAwiSet(endYear = 2025)\n#' getAwiSet()\n#'\n#' @export\ngetAwiSet <- function(endYear = NULL) {\n  if(is.null(endYear)) {\n    return(awi)\n  }\n\n  if(endYear < min(awi$Year)) {\n    stop(\"endYear parameter is before the first year of AWI data set.\\n  There are no values to return.\")\n  }\n\n  beginYear <- max(awi$Year, na.rm = TRUE) + 1\n  if(endYear <= beginYear) {\n    return(awi[awi$Year <= endYear,])\n  } else {\n    awiChunk <- data.frame(Year = beginYear:endYear,\n                           AWI = predict(awiMars, newdata = beginYear:endYear))\n    awiChunk$`Annual change` = c((awiChunk$AWI[1] - awi$AWI[nrow(awi)]) /\n                                   awi$AWI[nrow(awi)],\n                                 (awiChunk$AWI[2:(nrow(awiChunk))] -\n                                    awiChunk$AWI[1:(nrow(awiChunk) - 1)]) /\n                                   awiChunk$AWI[1:(nrow(awiChunk) - 1)])\n    awiChunk$Status = \"Predicted\"\n\n    return(rbind(awi, awiChunk))\n  }\n}\n\n\n\n#' Return the \\emph{National Average Wage Index} values for input years.\n#'\n#' Return the AWI values for input years. The values are either\n#' measured or predicted through a model depending on whether or\n#' not a measure value exists for the input year. Predicted values\n#' will only be produced for years later than the last year in the\n#' data set downloaded from the government site. No values for years\n#' before the first year in the set will be predicted.\n#'\n#' @param year the years fof the AWI values to return\n#' @return the AWI values for \\code{years}\n#' @examples\n#' getAwiValues(years = 2025)\n#' getAwiValues(years = 2000:2025)\n#'\n#' @export\ngetAwiValues <- function(years = NULL) {\n  if(is.null(years) || missing(years) || length(years) == 0) {\n    stop(\"Need to specify a year (or set of years) for which you\\nwant the AWI value(s).\")\n\n  } else if(max(years) < min(awi$Year)) {\n    stop(\"All years requested are before the first year in the data set.\\n  No values will be returned.\")\n\n  } else if(min(years) < min(awi$Year)) {\n    warning(\"The earliest year requested is before the first year in the data set.\\n  The earliest year returned will be the first year in the data set.\")\n    if(max(years) <= max(awi$Year)) {\n      c(awi[awi$Year %in% years,]$AWI)\n    } else {\n      warning(\"Values after \", max(awi$Year), \" are predicted values.\")\n      c(awi[awi$Year %in% years,]$AWI,\n        predict(awiMars, newdata = setdiff(years, awi$Year)))\n    }\n\n  } else if(max(years) <= max(awi$Year)) {\n    awi[awi$Year %in% years,]$AWI\n\n  } else if(min(years) <= max(awi$Year)) {\n    warning(\"Values after \", max(awi$Year), \" are predicted values.\")\n    c(awi[awi$Year %in% years,]$AWI,\n      predict(awiMars, newdata = setdiff(years, awi$Year)))\n\n  } else {\n    warning(\"All values in this set are predicted values.\")\n    c(predict(awiMars, newdata = years))\n  }\n}\n\n\n\n",
    "created" : 1493551689816.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2857042422",
    "id" : "BB3301C0",
    "lastKnownWriteTime" : 1491611417,
    "last_content_update" : 1491611417,
    "path" : "~/Dropbox/oasdir/R/awiData.R",
    "project_path" : "R/awiData.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}